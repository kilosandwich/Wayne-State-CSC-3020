/******************************************************************************

Write a program that prompts the user to enter a file name and displays the number
of lines, number of words, and the occurrences of each letter in the console
window and in a file.
Words are separated by whitespace and letters are case insensitive.
Use “Lincoln.txt” for input and “letterCount.txt” for output. Use try-catch blocks
to handle all checked exceptions (do not declare the exceptions in the method
header). Do not use FileWriter class to write to a file.
Your program must have an extra function to display the output in a file and in the
console window.
Here is a sample output:

*******************************************************************************/
import java.io.FileReader;
import java.io.IOException;
import java.io.File;
import java.util.Scanner;
import java.io.PrintWriter;
import java.io.IOException;


class counter{
    String filename = "";
    String outputfilename = "letters.txt";
    int words = 0;
    int lines = 0;
    int[] letters = new int[26];
    String alphupper = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    String alphlower = "abcdefghijklmnopqrstuvwxyz";
    
    counter(String s){
        this.filename = s;
        reader();
        print();
        writer();
    }
    
    
    //we need to read whatever we're writing
    //and create a tally of letters of the alphabet, and of words, and of lines
    void reader(){
        try{
            //line tallyer
            Scanner inputlines = new Scanner(new File(this.filename));
            while(inputlines.hasNextLine()){
                inputlines.nextLine();
                //System.out.println("STUCK IN LINES");
                lines += 1;
            }
            inputlines.close();
            
            Scanner inputwords = new Scanner(new File(this.filename));
            
            while(inputwords.hasNext()){
                //System.out.print("STUCK IN WORDS");
                words +=1; //word tally
                String tempword = inputwords.next(); 
                //letter tallyer
                for(int i=0; i< tempword.length(); i++){
                    for(int j =0; j<26; j++){
                        if(tempword.charAt(i) == (alphupper.charAt(j))){
                            letters[j] += 1;
                        }else if(tempword.charAt(i) == (alphlower.charAt(j))){
                            letters[j] += 1;
                        }
                    } 
                }

            }
            inputwords.close();
        }catch(Exception e){
            System.out.println("ERROR, FILE NOT FOUND");
        }
    }
    //we need to write our final tally
    void writer(){
        try{
            PrintWriter writerhere = new PrintWriter(new File(this.outputfilename));
            writerhere.print(toString());
            writerhere.close();
        }catch(Exception e){
            System.out.println("ERROR, FILE NOT FOUND");
        }
    }
    
    void print(){
        System.out.print(toString());
    }
    
    public String toString(){
        String tempstring = "";
        tempstring += this.filename + " file has";
        tempstring += ": " + lines + " lines";
        tempstring += " and: " + words + " words \n";
        for(int i=0; i<alphupper.length(); i++){
            tempstring += "\n the occurence of " + alphupper.charAt(i) + "'s is: " + letters[i];
        }
        
        return tempstring;
    }
}





public class Main
{
	public static void main(String[] args) {
		counter c = new counter("Lincoln.txt");
	}
}
